#!/bin/bash

# Determine program name
PRGDIR=`type $0 | awk '{print $3}'`
PRGNAME=`basename $0`
PRGNAME=`basename $0 |  awk -F '.' '{print $1}'`

# Get absolute path name of the script
PWD=`pwd`
DIRNAME=`dirname $0| sed 's/^\.//'`
LIB="$PWD/$DIRNAME"

# Debug variable
DEBUG=0

# Necessary commands 
# mid3v2 eye3D id3ed

# trap
trap 'trapfunc' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17

function trapfunc {
#echo "trapped"
printf "%-10s %-10s %-22s %-30s \n" "Info :" "$PRGNAME : " "Program aborted"
end
exit
}

function usage {
cat << FIN
Oper various operations on mp3 files and mp3 tags
usage : $PRGNAME [ -L ]
	-1/-2 : Remove ID tag ver 1 or 2
        -d :    run in debug mode 
	-g : 	Change mp3 genre for file in cur list
	-G : 	List mp3 genre num/list
        -h :    sho this help
	-l :	List mp3tag for files in current dir
	-L :    lower case files in current dir and V2 tags title/album
	
FIN
}

function end {
if [ $# -ne 0 ];
then
        RET=$1
else
        RET=0
fi
if [ -f {$TMPF1:=DUMMY.$$} ] ;
then
      rm $TMPF1
fi
	exit $RET
}

function change_all {
TYPE=$1
shift
PARAM="$*"
case $TYPE in 
	genre) OPT=g i
		OPT2=G;;
	*) 	echo "Not yet implemented"
		end ;;
esac
ls -1 *.mp3 *.MP3 2> /dev/null | while read i ;
do
	#echo "change to $TYPE : $PARAM"
	#id3ed -$OPT "$PARAM" "$i" -q 
	eyeD3 -$OPT2 "$PARAM" "$i" 
done
}

# Global vars
DATESTAMP=`date '+%Y%m%d-%H%M'`
LOWER=0
LIST=0
ID3TAGFILE=/home/pierre/bin/id3tag.list
GENRELIST=0
CHGGENRE=0
REMV=0 

DO=0
#EXT=mp3
EXT="mp3 MP3"

while getopts 12dhg:GlLT sarg
do
case $sarg in
	1)	REMV=1 ;;
	2)	REMV=2 ;;
	d)      set -x
	DEBUG=1 ;;
	h)      usage
		end;;
	g)	CHGGENRE=1 
		INPUT1=$OPTARG;;
	G)	GENRELIST=1 ;;
	l)	LIST=1 ;;
	L) 	LOWER=1 ;;
	*)      echo "ERROR : $PRGNAME : Bad option or misusage"
		usage
		end ;;
esac
done

shift `expr $OPTIND - 1`
if [ $# -gt 1 ];
then
        echo "args $#"
        usage
        end
else
	PARAM=$1
fi

if [ $GENRELIST -eq 1 ];
then
	cat $ID3TAGFILE
fi

if [ $CHGGENRE -eq 1 ];
then
	change_all genre $INPUT1
	
fi

if [ $REMV -ne 0 ] ;
then
case  $REMV in
	1) TAG="remove-v1" ;; 
	2) TAG="remove-v1" ;;
	*) echo "INFO : $PRGNAME : no tag to remove"
	   end ;; 
esac
echo "INFO : $PRGNAME : Removing tag version $REMV, hit any key"
read dummy
ls -1 *.mp3 *.MP3 2> /dev/null | while read i ; 
do
		eyeD3 --$TAG $i
done
end
fi

if [ $LOWER -eq 1 ] ;
then
	NB=$(ls -1 *.mp3 *.MP3 2> /dev/null | wc -l 2> /dev/null)
	echo "Lower case all ($NB) files ?"
	read dummy
	for i in $(ls *.mp3 *.MP3 2> /dev/null) ; 
	do
		echo "INFO : $PRGNAME : File $i " 
		newname=$(echo "$i"| tr [A-Z] [a-z])
		if [ $DEBUG -ne 0 ] ;
		then
			echo "$i"
			echo "$newname"
		fi
		if [ "$i" != "$newname" ] ; 
		then
			mv "$i" "$newname"
		fi
		VAR=$(mid3v2 "$newname"  | grep TIT2  | cut -d "=" -f 2- | tr [A-Z] [a-z])
		mid3v2 -t "$VAR" $i
		VAR=$(mid3v2 "$newname"  | grep TALB  | cut -d "=" -f 2- | tr [A-Z] [a-z])
		mid3v2 -A "$VAR" $i
	done
	end
fi

if [ $LIST -eq 1 ] ;
then
	ls -1 *.mp3 *.MP3 2> /dev/null | while read i ; 
	do
		id3ed -i "$i" 
	done
	end
fi

end 


COUNT=1 
find . -name "*.$EXT" | sort -n | while read i ; 
do  
file=$(echo $i | sed 's/\..* //')
file=$(echo $file | sed s/\.$EXT$//)
#echo "$i = $file"
echo "id3ed -q -s $file -n $ARTIST -a $TITLE -y $YEAR -k $COUNT -g $GENRE $i" 
if [ $DO -eq 1 ];
then
	id3ed -q -s "$file" -n "$ARTIST" -a "$TITLE" -y $YEAR -k $COUNT -g $GENRE "$i"
fi
COUNT=$((COUNT + 1))
done
